type EscrowAccount @entity{
    # Thaw transaction hash is used as ID
    id: Bytes!
    payer: Payer!
    collector: Collector!
    receiver: Receiver!
    payer: Payer!
    balance: BigInt!
    totalAmountThawing: BigInt!
    thawEndTimestamp: BigInt!
    transactions: [Transaction!]! @derivedFrom(field: "escrowAccount") 
}

# Represents the gateway
type Payer @entity {
  # payer address
  id: Bytes!
  # Payer Escrow
  escrowAccounts: [EscrowAccount!]! @derivedFrom(field: "payer")
  transactions: [Transaction!]! @derivedFrom(field: "payer")
  signers: [Signer!]! @derivedFrom(field: "payer")
}

# Represents the indexer
type Receiver @entity {
  # receiver address
  id: Bytes!
  escrowAccounts: [EscrowAccount!]! @derivedFrom(field: "receiver")
  transactions: [Transaction!]! @derivedFrom(field: "receiver")
}

# Represents the data service
type Collector @entity {
  # receiver address
  id: Bytes!
  isAuthorized: Boolean!
  thawEndTimestamp: BigInt! 
  escrowAccounts: [EscrowAccount!]! @derivedFrom(field: "collector")
  transactions: [Transaction!]! @derivedFrom(field: "collector")
}

type Transaction @entity(immutable: true){
  id: Bytes!
  transactionGroupID: Bytes!
  type: String!
  payer: Payer!
  receiver: Receiver!
  collector: Collector!
  tokens: BigInt!
  paymentType: Int
  escrowAccount: EscrowAccount!
  timestamp: BigInt!
}

type Signer @entity{
  id: Bytes!
  isAuthorized: Boolean!
  payer: Payer!
  thawEndTimestamp: BigInt!
}
