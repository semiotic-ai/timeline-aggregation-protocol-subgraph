// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class AuthorizedCollector extends ethereum.Event {
  get params(): AuthorizedCollector__Params {
    return new AuthorizedCollector__Params(this);
  }
}

export class AuthorizedCollector__Params {
  _event: AuthorizedCollector;

  constructor(event: AuthorizedCollector) {
    this._event = event;
  }

  get payer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get collector(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get addedAllowance(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get newTotalAllowance(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class CancelThaw extends ethereum.Event {
  get params(): CancelThaw__Params {
    return new CancelThaw__Params(this);
  }
}

export class CancelThaw__Params {
  _event: CancelThaw;

  constructor(event: CancelThaw) {
    this._event = event;
  }

  get payer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get receiver(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class CancelThawCollector extends ethereum.Event {
  get params(): CancelThawCollector__Params {
    return new CancelThawCollector__Params(this);
  }
}

export class CancelThawCollector__Params {
  _event: CancelThawCollector;

  constructor(event: CancelThawCollector) {
    this._event = event;
  }

  get payer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get collector(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Deposit extends ethereum.Event {
  get params(): Deposit__Params {
    return new Deposit__Params(this);
  }
}

export class Deposit__Params {
  _event: Deposit;

  constructor(event: Deposit) {
    this._event = event;
  }

  get payer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get collector(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get receiver(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get tokens(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class EscrowCollected extends ethereum.Event {
  get params(): EscrowCollected__Params {
    return new EscrowCollected__Params(this);
  }
}

export class EscrowCollected__Params {
  _event: EscrowCollected;

  constructor(event: EscrowCollected) {
    this._event = event;
  }

  get payer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get collector(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get receiver(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get tokens(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class GraphDirectoryInitialized extends ethereum.Event {
  get params(): GraphDirectoryInitialized__Params {
    return new GraphDirectoryInitialized__Params(this);
  }
}

export class GraphDirectoryInitialized__Params {
  _event: GraphDirectoryInitialized;

  constructor(event: GraphDirectoryInitialized) {
    this._event = event;
  }

  get graphToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get graphStaking(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get graphPayments(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get graphEscrow(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get graphController(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get graphEpochManager(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get graphRewardsManager(): Address {
    return this._event.parameters[6].value.toAddress();
  }

  get graphTokenGateway(): Address {
    return this._event.parameters[7].value.toAddress();
  }

  get graphProxyAdmin(): Address {
    return this._event.parameters[8].value.toAddress();
  }

  get graphCuration(): Address {
    return this._event.parameters[9].value.toAddress();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class RevokeCollector extends ethereum.Event {
  get params(): RevokeCollector__Params {
    return new RevokeCollector__Params(this);
  }
}

export class RevokeCollector__Params {
  _event: RevokeCollector;

  constructor(event: RevokeCollector) {
    this._event = event;
  }

  get payer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get collector(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Thaw extends ethereum.Event {
  get params(): Thaw__Params {
    return new Thaw__Params(this);
  }
}

export class Thaw__Params {
  _event: Thaw;

  constructor(event: Thaw) {
    this._event = event;
  }

  get payer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get collector(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get receiver(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get tokens(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get thawEndTimestamp(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class ThawCollector extends ethereum.Event {
  get params(): ThawCollector__Params {
    return new ThawCollector__Params(this);
  }
}

export class ThawCollector__Params {
  _event: ThawCollector;

  constructor(event: ThawCollector) {
    this._event = event;
  }

  get payer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get collector(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Withdraw extends ethereum.Event {
  get params(): Withdraw__Params {
    return new Withdraw__Params(this);
  }
}

export class Withdraw__Params {
  _event: Withdraw;

  constructor(event: Withdraw) {
    this._event = event;
  }

  get payer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get collector(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get receiver(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get tokens(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class PaymentsEscrow__authorizedCollectorsResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getAllowance(): BigInt {
    return this.value0;
  }

  getThawEndTimestamp(): BigInt {
    return this.value1;
  }
}

export class PaymentsEscrow__escrowAccountsResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getBalance(): BigInt {
    return this.value0;
  }

  getTokensThawing(): BigInt {
    return this.value1;
  }

  getThawEndTimestamp(): BigInt {
    return this.value2;
  }
}

export class PaymentsEscrow extends ethereum.SmartContract {
  static bind(address: Address): PaymentsEscrow {
    return new PaymentsEscrow("PaymentsEscrow", address);
  }

  MAX_WAIT_PERIOD(): BigInt {
    let result = super.call(
      "MAX_WAIT_PERIOD",
      "MAX_WAIT_PERIOD():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_MAX_WAIT_PERIOD(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_WAIT_PERIOD",
      "MAX_WAIT_PERIOD():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  REVOKE_COLLECTOR_THAWING_PERIOD(): BigInt {
    let result = super.call(
      "REVOKE_COLLECTOR_THAWING_PERIOD",
      "REVOKE_COLLECTOR_THAWING_PERIOD():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_REVOKE_COLLECTOR_THAWING_PERIOD(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "REVOKE_COLLECTOR_THAWING_PERIOD",
      "REVOKE_COLLECTOR_THAWING_PERIOD():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  WITHDRAW_ESCROW_THAWING_PERIOD(): BigInt {
    let result = super.call(
      "WITHDRAW_ESCROW_THAWING_PERIOD",
      "WITHDRAW_ESCROW_THAWING_PERIOD():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_WITHDRAW_ESCROW_THAWING_PERIOD(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "WITHDRAW_ESCROW_THAWING_PERIOD",
      "WITHDRAW_ESCROW_THAWING_PERIOD():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  authorizedCollectors(
    payer: Address,
    collector: Address,
  ): PaymentsEscrow__authorizedCollectorsResult {
    let result = super.call(
      "authorizedCollectors",
      "authorizedCollectors(address,address):(uint256,uint256)",
      [
        ethereum.Value.fromAddress(payer),
        ethereum.Value.fromAddress(collector),
      ],
    );

    return new PaymentsEscrow__authorizedCollectorsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
    );
  }

  try_authorizedCollectors(
    payer: Address,
    collector: Address,
  ): ethereum.CallResult<PaymentsEscrow__authorizedCollectorsResult> {
    let result = super.tryCall(
      "authorizedCollectors",
      "authorizedCollectors(address,address):(uint256,uint256)",
      [
        ethereum.Value.fromAddress(payer),
        ethereum.Value.fromAddress(collector),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PaymentsEscrow__authorizedCollectorsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
      ),
    );
  }

  escrowAccounts(
    payer: Address,
    collector: Address,
    receiver: Address,
  ): PaymentsEscrow__escrowAccountsResult {
    let result = super.call(
      "escrowAccounts",
      "escrowAccounts(address,address,address):(uint256,uint256,uint256)",
      [
        ethereum.Value.fromAddress(payer),
        ethereum.Value.fromAddress(collector),
        ethereum.Value.fromAddress(receiver),
      ],
    );

    return new PaymentsEscrow__escrowAccountsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
    );
  }

  try_escrowAccounts(
    payer: Address,
    collector: Address,
    receiver: Address,
  ): ethereum.CallResult<PaymentsEscrow__escrowAccountsResult> {
    let result = super.tryCall(
      "escrowAccounts",
      "escrowAccounts(address,address,address):(uint256,uint256,uint256)",
      [
        ethereum.Value.fromAddress(payer),
        ethereum.Value.fromAddress(collector),
        ethereum.Value.fromAddress(receiver),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PaymentsEscrow__escrowAccountsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
      ),
    );
  }

  getBalance(payer: Address, collector: Address, receiver: Address): BigInt {
    let result = super.call(
      "getBalance",
      "getBalance(address,address,address):(uint256)",
      [
        ethereum.Value.fromAddress(payer),
        ethereum.Value.fromAddress(collector),
        ethereum.Value.fromAddress(receiver),
      ],
    );

    return result[0].toBigInt();
  }

  try_getBalance(
    payer: Address,
    collector: Address,
    receiver: Address,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getBalance",
      "getBalance(address,address,address):(uint256)",
      [
        ethereum.Value.fromAddress(payer),
        ethereum.Value.fromAddress(collector),
        ethereum.Value.fromAddress(receiver),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  multicall(data: Array<Bytes>): Array<Bytes> {
    let result = super.call("multicall", "multicall(bytes[]):(bytes[])", [
      ethereum.Value.fromBytesArray(data),
    ]);

    return result[0].toBytesArray();
  }

  try_multicall(data: Array<Bytes>): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall("multicall", "multicall(bytes[]):(bytes[])", [
      ethereum.Value.fromBytesArray(data),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get controller(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get revokeCollectorThawingPeriod(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get withdrawEscrowThawingPeriod(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ApproveCollectorCall extends ethereum.Call {
  get inputs(): ApproveCollectorCall__Inputs {
    return new ApproveCollectorCall__Inputs(this);
  }

  get outputs(): ApproveCollectorCall__Outputs {
    return new ApproveCollectorCall__Outputs(this);
  }
}

export class ApproveCollectorCall__Inputs {
  _call: ApproveCollectorCall;

  constructor(call: ApproveCollectorCall) {
    this._call = call;
  }

  get collector_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get allowance(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCollectorCall__Outputs {
  _call: ApproveCollectorCall;

  constructor(call: ApproveCollectorCall) {
    this._call = call;
  }
}

export class CancelThawCollectorCall extends ethereum.Call {
  get inputs(): CancelThawCollectorCall__Inputs {
    return new CancelThawCollectorCall__Inputs(this);
  }

  get outputs(): CancelThawCollectorCall__Outputs {
    return new CancelThawCollectorCall__Outputs(this);
  }
}

export class CancelThawCollectorCall__Inputs {
  _call: CancelThawCollectorCall;

  constructor(call: CancelThawCollectorCall) {
    this._call = call;
  }

  get collector(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class CancelThawCollectorCall__Outputs {
  _call: CancelThawCollectorCall;

  constructor(call: CancelThawCollectorCall) {
    this._call = call;
  }
}

export class CollectCall extends ethereum.Call {
  get inputs(): CollectCall__Inputs {
    return new CollectCall__Inputs(this);
  }

  get outputs(): CollectCall__Outputs {
    return new CollectCall__Outputs(this);
  }
}

export class CollectCall__Inputs {
  _call: CollectCall;

  constructor(call: CollectCall) {
    this._call = call;
  }

  get paymentType(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get payer(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get receiver(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get tokens(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get dataService(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get tokensDataService(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class CollectCall__Outputs {
  _call: CollectCall;

  constructor(call: CollectCall) {
    this._call = call;
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get collector(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get receiver(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokens(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class DepositToCall extends ethereum.Call {
  get inputs(): DepositToCall__Inputs {
    return new DepositToCall__Inputs(this);
  }

  get outputs(): DepositToCall__Outputs {
    return new DepositToCall__Outputs(this);
  }
}

export class DepositToCall__Inputs {
  _call: DepositToCall;

  constructor(call: DepositToCall) {
    this._call = call;
  }

  get payer(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get collector(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get receiver(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get tokens(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class DepositToCall__Outputs {
  _call: DepositToCall;

  constructor(call: DepositToCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class MulticallCall extends ethereum.Call {
  get inputs(): MulticallCall__Inputs {
    return new MulticallCall__Inputs(this);
  }

  get outputs(): MulticallCall__Outputs {
    return new MulticallCall__Outputs(this);
  }
}

export class MulticallCall__Inputs {
  _call: MulticallCall;

  constructor(call: MulticallCall) {
    this._call = call;
  }

  get data(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }
}

export class MulticallCall__Outputs {
  _call: MulticallCall;

  constructor(call: MulticallCall) {
    this._call = call;
  }

  get results(): Array<Bytes> {
    return this._call.outputValues[0].value.toBytesArray();
  }
}

export class RevokeCollectorCall extends ethereum.Call {
  get inputs(): RevokeCollectorCall__Inputs {
    return new RevokeCollectorCall__Inputs(this);
  }

  get outputs(): RevokeCollectorCall__Outputs {
    return new RevokeCollectorCall__Outputs(this);
  }
}

export class RevokeCollectorCall__Inputs {
  _call: RevokeCollectorCall;

  constructor(call: RevokeCollectorCall) {
    this._call = call;
  }

  get collector_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RevokeCollectorCall__Outputs {
  _call: RevokeCollectorCall;

  constructor(call: RevokeCollectorCall) {
    this._call = call;
  }
}

export class ThawCall extends ethereum.Call {
  get inputs(): ThawCall__Inputs {
    return new ThawCall__Inputs(this);
  }

  get outputs(): ThawCall__Outputs {
    return new ThawCall__Outputs(this);
  }
}

export class ThawCall__Inputs {
  _call: ThawCall;

  constructor(call: ThawCall) {
    this._call = call;
  }

  get collector(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get receiver(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokens(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ThawCall__Outputs {
  _call: ThawCall;

  constructor(call: ThawCall) {
    this._call = call;
  }
}

export class ThawCollectorCall extends ethereum.Call {
  get inputs(): ThawCollectorCall__Inputs {
    return new ThawCollectorCall__Inputs(this);
  }

  get outputs(): ThawCollectorCall__Outputs {
    return new ThawCollectorCall__Outputs(this);
  }
}

export class ThawCollectorCall__Inputs {
  _call: ThawCollectorCall;

  constructor(call: ThawCollectorCall) {
    this._call = call;
  }

  get collector(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ThawCollectorCall__Outputs {
  _call: ThawCollectorCall;

  constructor(call: ThawCollectorCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get collector(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get receiver(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
